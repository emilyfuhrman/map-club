desc "builds cartagen.js"
task :build do
	build
end

		
desc "automatically builds cartagen.js when something in src/ changes"
task :autobuild do
	require 'lib/filesystemwatcher'
	watcher = FileSystemWatcher.new
	watcher.addDirectory 'src', '**/*.js'
	watcher.sleepTime = 2
	watcher.start do |status,file|
	    if ([FileSystemWatcher::CREATED,
	    	FileSystemWatcher::MODIFIED,
	    	FileSystemWatcher::DELETED].include? status)
	        
	        build
	    end
	end
	
	watcher.join()
end

desc "builds the API docs"
task :docs do
	Dir.chdir 'lib/jsdoc'
	puts `java -jar jsrun.jar app/main.js -t=templates/ext/ -d=../../../jsdox/ -a -r=2 ../../src/`
end

desc "Finds while file a source line is in"
task :which, :line do |t, args|
	lines = Marshal.load IO.read('.line_data.dat')
	puts lines[args.line.to_i]
end


def build
	puts 'building... '+DateTime.now.to_s
	$:.push 'lib/sprockets'
	require 'sprockets'
	
	secretary = Sprockets::Secretary.new(
	  :load_path    => ['src'],
	  :source_files => ['src/cartagen.js']
	)
	
	lines = Marshal.dump secretary.preprocessor.lines
	File.open '.line_data.dat', 'w' do |f|
		f.print lines
	end
	
	concatenation = secretary.concatenation
	
	concatenation.save_to("cartagen.js")
	
	puts "Build finished"
end 